# Generated by roxygen2: do not edit by hand

S3method(plot,bootstrap_indicators)
S3method(plot,literature_search)
S3method(plot,meta_analysis)
S3method(plot,mutual_information)
S3method(plot,robust_taxa_indicators)
S3method(plot,shapley_values)
S3method(plot,statistical_validation)
S3method(plot,taxa_indicators)
S3method(plot,universal_information)
S3method(plot,universal_transformation)
S3method(plot,validated_indicators)
S3method(print,api_response)
S3method(print,assembly_mechanisms)
S3method(print,batch_processing)
S3method(print,bootstrap_indicators)
S3method(print,consensus_results)
S3method(print,diversityGPT_client)
S3method(print,diversity_interpretation)
S3method(print,diversity_results)
S3method(print,ecological_hypotheses)
S3method(print,literature_search)
S3method(print,llm_multi_step_analysis)
S3method(print,meta_analysis)
S3method(print,mutual_information)
S3method(print,performance_report)
S3method(print,quality_assurance)
S3method(print,robust_taxa_indicators)
S3method(print,shapley_values)
S3method(print,statistical_validation)
S3method(print,taxa_indicators)
S3method(print,universal_information)
S3method(print,universal_relationships)
S3method(print,universal_transformation)
S3method(print,validated_indicators)
S3method(summary,api_response)
export(batch_process_phyloseq)
export(biom_to_phyloseq)
export(bootstrap_taxa_indicators)
export(cache_cleanup)
export(cache_clear)
export(cache_exists)
export(cache_get)
export(cache_is_initialized)
export(cache_remove)
export(cache_stats)
export(cache_store)
export(cache_with_key)
export(cached_computation_with_progress)
export(cached_diversity_suite)
export(cached_extract_universal_information)
export(calculate_conditional_mutual_information)
export(calculate_diversity)
export(calculate_taxa_mutual_information)
export(calculate_taxa_shapley_values)
export(check_api_setup)
export(consensus_diversity)
export(convert_to_phyloseq)
export(create_api_client)
export(create_api_config)
export(create_demo_phyloseq)
export(create_demo_subset)
export(create_diversityGPT_api)
export(create_progress_tracker)
export(cross_study_meta_analysis)
export(debug_api)
export(detect_assembly_mechanisms)
export(detect_data_format)
export(discover_metric_relationships)
export(diversityGPT_api)
export(diversityGPT_datasets)
export(enable_performance_monitoring)
export(explore_example)
export(extract_universal_information)
export(finish_progress)
export(generate_diversity_report)
export(generate_ecological_hypotheses)
export(generate_meta_analysis_report)
export(generate_quick_summary)
export(get_api_data)
export(get_api_error)
export(get_dataset_info)
export(get_performance_report)
export(identify_taxa_indicators)
export(init_cache_system)
export(interpret_diversity)
export(is_api_success)
export(launch_component_explorer)
export(launch_diversity_explorer)
export(launch_enhanced_explorer)
export(launch_simple_explorer)
export(list_available_datasets)
export(llm_multi_step_analysis)
export(load_batch_results)
export(load_dataset)
export(load_dataset_with_progress)
export(load_precomputed_universal)
export(memory_efficient_transform)
export(merge_qiime2_artifacts)
export(metaphlan_to_phyloseq)
export(optimized_calculate_diversity)
export(parallel_extract_universal)
export(plot_diversity_network)
export(plot_information_components)
export(plot_transformation_quality)
export(plot_transformation_results)
export(precompute_universal_info)
export(predict_missing_diversity_metrics)
export(qiime2_to_phyloseq)
export(report_null_validation)
export(report_robust_indicators)
export(report_taxa_indicators)
export(retry_failed_datasets)
export(robust_taxa_indicators)
export(run_diversityGPT_api)
export(run_quality_assurance)
export(search_datasets)
export(search_literature)
export(universal_diversity_transform)
export(update_progress)
export(validate_taxa_indicators)
export(validate_universal_analysis)
export(with_progress)
import(digest)
import(phyloseq)
importFrom(jsonlite,fromJSON)
importFrom(rlang,.data)
importFrom(stats,cor)
importFrom(stats,sd)
importFrom(stats,var)
importFrom(utils,object.size)
