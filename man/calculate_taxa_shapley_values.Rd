% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shapley_values.R
\name{calculate_taxa_shapley_values}
\alias{calculate_taxa_shapley_values}
\title{Calculate Shapley Values for Taxa Contributions}
\usage{
calculate_taxa_shapley_values(
  physeq,
  components = NULL,
  top_n = 15,
  method = c("exact", "sampling", "permutation", "marginal"),
  n_samples = 1000,
  coalition_size_limit = 10,
  parallel = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{physeq}{A phyloseq object}

\item{components}{Universal information components (output from extract_universal_information)}

\item{top_n}{Number of top taxa to include in full Shapley calculation (default: 15)}

\item{method}{Calculation method: "exact", "sampling", "permutation", "marginal"}

\item{n_samples}{Number of samples for approximation methods (default: 1000)}

\item{coalition_size_limit}{Maximum coalition size for computational efficiency (default: 10)}

\item{parallel}{Use parallel processing for large calculations (default: FALSE)}

\item{verbose}{Print progress messages}
}
\value{
A shapley_values object containing:
\item{shapley_matrix}{Matrix of Shapley values (taxa x components)}
\item{coalitional_values}{Coalition value function for all subsets}
\item{marginal_contributions}{Marginal contribution matrix}
\item{fairness_properties}{Validation of Shapley axioms}
\item{approximation_quality}{Quality metrics for approximate methods}
\item{taxa_rankings}{Taxa ranked by Shapley values for each component}
\item{summary_stats}{Summary statistics and interpretation}
}
\description{
Implements Shapley value calculation from cooperative game theory to fairly
attribute diversity component values among taxa. This provides the most
principled approach to taxa contribution analysis by considering all possible
coalitions and their marginal contributions.
}
\examples{
# Create demo data
demo_data <- create_demo_phyloseq()

# Extract universal information
info <- extract_universal_information(demo_data)

# Calculate Shapley values (exact for small problems)
shapley_results <- calculate_taxa_shapley_values(
  demo_data, info,
  top_n = 8,
  method = "exact"
)

# View Shapley values
print(shapley_results)

# For larger problems, use approximation
shapley_approx <- calculate_taxa_shapley_values(
  demo_data, info,
  top_n = 20,
  method = "sampling",
  n_samples = 500
)
}
