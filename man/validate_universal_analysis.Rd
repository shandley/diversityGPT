% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/statistical_validation.R
\name{validate_universal_analysis}
\alias{validate_universal_analysis}
\title{Statistical Validation Framework for diversityGPT}
\usage{
validate_universal_analysis(
  universal_info,
  phyloseq_obj,
  bootstrap_n = 1000,
  cv_folds = 5,
  alpha = 0.05,
  validate_transformations = TRUE,
  validate_components = TRUE,
  seed = 42
)
}
\arguments{
\item{universal_info}{Universal information object from extract_universal_information()}

\item{phyloseq_obj}{Original phyloseq object used for analysis}

\item{bootstrap_n}{Number of bootstrap iterations (default: 1000)}

\item{cv_folds}{Number of cross-validation folds (default: 5)}

\item{alpha}{Significance level for confidence intervals (default: 0.05)}

\item{validate_transformations}{Whether to validate metric transformations}

\item{validate_components}{Whether to validate component extraction}

\item{seed}{Random seed for reproducibility}
}
\value{
A list containing:
\item{bootstrap_ci}{Bootstrap confidence intervals for all metrics}
\item{cross_validation}{Cross-validation results}
\item{consistency_checks}{Mathematical consistency validation}
\item{transformation_validation}{Transformation quality assessment}
\item{component_validation}{Component extraction validation}
\item{overall_assessment}{Overall quality assessment}
}
\description{
Comprehensive validation functions to ensure statistical robustness
of universal transformations and ecological analyses.
Validate Universal Information Analysis
}
\details{
Performs comprehensive statistical validation of universal information
extraction including bootstrap confidence intervals, cross-validation,
and mathematical consistency checks.
}
\examples{
\dontrun{
# Load data and extract universal information
data(GlobalPatterns)
universal_info <- extract_universal_information(GlobalPatterns)

# Comprehensive validation
validation <- validate_universal_analysis(
  universal_info,
  GlobalPatterns,
  bootstrap_n = 1000,
  cv_folds = 5
)

print(validation)
plot(validation)
}

}
